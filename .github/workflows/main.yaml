name: Deploy to prod

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: amazing-app
  DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Node
        uses: actions/setup-node@v5

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        id: push-image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo $IMAGE_ID:$VERSION >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        run: echo "Deploying image ${{ needs.build.outputs.image_tag }} to production"
      - name: Deploy to prod
        uses: CND-Bergen/cnd-deploy-action@main
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          image: ${{ needs.build.outputs.image }}